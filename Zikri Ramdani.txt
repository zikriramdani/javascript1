const productData = [
    {
        productId: 1000,
        productName: 'Product 1000'
    },
    {
        productId: 1001,
        productName: 'Product 1001'
    }
];
const stockData = [
    {
        productId: 1000,
        locationId: 1,
        stock: 21
    },
    {
        productId: 1000,
        locationId: 2,
        stock: 8
    },
    {
        productId: 1001,
        locationId: 1,
        stock: 4
    },
    {
        productId: 1001,
        locationId: 2,
        stock: 10
    }
];
const locationData = [
    {
        locationId: 1,
        locationName: 'Location 1'
    },
    {
        locationId: 2,
        locationName: 'Location 2'
    }
];

Diinginkan hasil berikut:

const result = [
    {
        productName: 'Product 1000',
        stock: {
            total: 29,
            detail: [
                {
                    locationName: 'Location 1',
                    stock: 21
                },
                {
                    locationName: 'Location 2',
                    stock: 8
                }
            ]
        }
    },
    {
        productName: 'Product 1001',
        stock: {
            total: 14,
            detail: [
                {
                    locationName: 'Location 1',
                    stock: 4
                },
                {
                    locationName: 'Location 2',
                    stock: 10
                }
            ]
        }
    }
];

Tulis fungsi yang mengembalikan hasil seperti di atas dengan ketentuan:
1. Gunakan bahasa pemrograman JavaScript, Python, PHP, atau pseudo-code
2. Algoritma efisien dan dapat digunakan untuk data yang besar (scalable)
3. Minimalisasi penggunaan built-in functions
4. Tambahkan 1 paragraf penjelasan mengenai solusi yang dipilih, seperti alasan, analisa, keuntungan, kerugian

================================================================================================================================
1. JavaScript
2.
function mergeObj(productDataList, stockDataList, locationDataList) {
    let result = [];
    productDataList.forEach(pd => {
        let product = {
            productName: pd.productName,
            stock: {
                total: 0,
                detail: []
            }
        };
        let stockList = stockDataList.filter(sd => sd.productId === pd.productId);
        if (stockList.length > 0) {
            stockList.forEach(sl => {
                let location = locationDataList.find(ld => ld.locationId === sl.locationId);
                if (location) {
                    let detail = {
                        locationName: location.locationName,
                        stock: sl.stock
                    }
                    product.stock.total += sl.stock;
                    product.stock.detail.push(detail);
                } else {
                    console.error('Location not found for stock data');
                }
            })
        }

        result.push(product);
    });
    return result;
}

console.log('Object merged: ', mergeObj(productData, stockData, locationData));

3.
